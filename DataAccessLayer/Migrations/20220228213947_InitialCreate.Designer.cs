// <auto-generated />
using System;
using DataAccessLayer.ApplicationDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220228213947_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataAccessLayer.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("account_id")
                        .UseIdentityColumn();

                    b.Property<int>("AccountNumber")
                        .HasColumnType("INT")
                        .HasColumnName("account_number");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("account_type");

                    b.Property<int>("ClientId")
                        .HasColumnType("INT");

                    b.Property<float>("InitialBalance")
                        .HasColumnType("REAL")
                        .HasColumnName("initial_balance");

                    b.Property<bool>("State")
                        .HasColumnType("BIT")
                        .HasColumnName("state");

                    b.HasKey("AccountId")
                        .HasName("pk_account");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("client_id")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(25)")
                        .HasColumnName("password");

                    b.Property<int>("PersonId")
                        .HasColumnType("INT");

                    b.Property<bool>("State")
                        .HasColumnType("BIT")
                        .HasColumnName("state");

                    b.HasKey("ClientId")
                        .HasName("pk_client");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("clients");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Movement", b =>
                {
                    b.Property<int>("MovementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("movement_id")
                        .UseIdentityColumn();

                    b.Property<int>("AccountId")
                        .HasColumnType("INT");

                    b.Property<float>("Balance")
                        .HasColumnType("REAL")
                        .HasColumnName("balance");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("movement_date");

                    b.Property<string>("MovementType")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("movement_type");

                    b.Property<float>("MovementValue")
                        .HasColumnType("REAL")
                        .HasColumnName("movement_value");

                    b.HasKey("MovementId")
                        .HasName("pk_movement");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("movements");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("person_id")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)")
                        .HasColumnName("address");

                    b.Property<int>("Age")
                        .HasColumnType("INT")
                        .HasColumnName("age");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("gender");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(15)")
                        .HasColumnName("identification");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(15)")
                        .HasColumnName("phone");

                    b.HasKey("PersonId")
                        .HasName("pk_user");

                    b.ToTable("persons");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Account", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Client", "Client")
                        .WithOne("Account")
                        .HasForeignKey("DataAccessLayer.Models.Account", "ClientId")
                        .HasConstraintName("fk_account_client")
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Client", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Person", "Person")
                        .WithOne("Client")
                        .HasForeignKey("DataAccessLayer.Models.Client", "PersonId")
                        .HasConstraintName("fk_client_account")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Movement", b =>
                {
                    b.HasOne("DataAccessLayer.Models.Account", "Account")
                        .WithOne("Movement")
                        .HasForeignKey("DataAccessLayer.Models.Movement", "AccountId")
                        .HasConstraintName("fk_movement_account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Account", b =>
                {
                    b.Navigation("Movement");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Client", b =>
                {
                    b.Navigation("Account");
                });

            modelBuilder.Entity("DataAccessLayer.Models.Person", b =>
                {
                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
